{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/model/usuarios.model.ts","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["UsuarioModel","routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","auth","router","loadingController","toastController","infoUser","description","username","name","photoUrl","registerUser","email","displayName","password","recoveryUser","usuario","initLoading","slides","lockSwipes","form","invalid","logincSuccess","setTimeout","login","subscribe","resp","loading","dismiss","toastSuccess","navigateByUrl","err","toastError","console","log","create","cssClass","message","present","duration","position","toast","postUser","uuid","nuevoUsuario","toastErrorRegister","recovery","toastSuccessRecovery","error","toastErrorMesage","slideTo","selector","template"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n    <ion-slides class=\\\"mainSlide\\\" #slidePrincipal>\\n        <ion-slide>\\n            <form (ngSubmit)=\\\"login(fLogin)\\\" #fLogin=\\\"ngForm\\\">\\n                <ion-grid fixed>\\n                    <ion-row>\\n                        <ion-col>\\n                            <img src=\\\"/assets/images/quedate_logo.png\\\">\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-list>\\n\\n                                <ion-item>\\n                                    <ion-label position=\\\"floating\\\">Email</ion-label>\\n                                    <ion-input name=\\\"email\\\" [class.is-invalid]=\\\"email.invalid && email.touched\\\" [(ngModel)]=\\\"usuario.email\\\" type=\\\"email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required #email=\\\"ngModel\\\"></ion-input>\\n                                </ion-item>\\n\\n                                <ion-item>\\n                                    <ion-label position=\\\"floating\\\">Password</ion-label>\\n                                    <ion-input name=\\\"password\\\" [class.is-invalid]=\\\"password.invalid && password.touched\\\" [(ngModel)]=\\\"usuario.password\\\" type=\\\"password\\\" required #password=\\\"ngModel\\\"></ion-input>\\n                                </ion-item>\\n\\n                            </ion-list>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-button type=\\\"submit\\\" color=\\\"tertiary\\\" shape=\\\"round\\\">\\n                                Login\\n                            </ion-button>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </form>\\n        </ion-slide>\\n        <ion-slide>\\n            <ion-grid fixed>\\n                <app-avatar-selector (avatarSel)=\\\"infoUser.photoUrl = $event\\\"></app-avatar-selector>\\n                <form (ngSubmit)=\\\"registro(fRegistro)\\\" #fRegistro=\\\"ngForm\\\">\\n                    <ion-row>\\n                        <ion-col size=\\\"12\\\">\\n                            <h4>Datos de la cuenta</h4>\\n                        </ion-col>\\n                        <ion-col>\\n                            <ion-list>\\n                                <ion-item>\\n                                    <ion-label position=\\\"floating\\\">Correo Electronico</ion-label>\\n                                    <ion-input name=\\\"email\\\" [(ngModel)]=\\\"registerUser.email\\\" type=\\\"email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required></ion-input>\\n                                </ion-item>\\n                                <ion-item>\\n                                    <ion-label position=\\\"floating\\\">Contrase√±a</ion-label>\\n                                    <ion-input name=\\\"password\\\" [(ngModel)]=\\\"registerUser.password\\\" type=\\\"password\\\" required></ion-input>\\n                                </ion-item>\\n                            </ion-list>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col size=\\\"12\\\">\\n                            <h4>Datos de la cuenta</h4>\\n                        </ion-col>\\n                        <ion-col>\\n                            <ion-list>\\n                                <ion-item>\\n                                    <ion-label position=\\\"floating\\\">Nombre completo</ion-label>\\n                                    <ion-input name=\\\"name\\\" [(ngModel)]=\\\"infoUser.name\\\" required></ion-input>\\n                                </ion-item>\\n                                <ion-item>\\n                                    <ion-label position=\\\"floating\\\">Usuario</ion-label>\\n                                    <ion-input name=\\\"username\\\" [(ngModel)]=\\\"infoUser.username\\\" required></ion-input>\\n                                </ion-item>\\n                                <ion-item>\\n                                    <ion-label position=\\\"floating\\\">Description <small>(Opcional)</small></ion-label>\\n                                    <ion-input name=\\\"description\\\" [(ngModel)]=\\\"infoUser.description\\\"></ion-input>\\n                                </ion-item>\\n                            </ion-list>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-button type=\\\"submit\\\" color=\\\"tertiary\\\" shape=\\\"round\\\">\\n                                Crear usuario\\n                            </ion-button>\\n                        </ion-col>\\n                    </ion-row>\\n                </form>\\n            </ion-grid>\\n        </ion-slide>\\n        <ion-slide>\\n            <ion-grid fixed>\\n                <ion-row>\\n                    <ion-col>\\n                        <img src=\\\"/assets/images/quedate_logo.png\\\">\\n                    </ion-col>\\n                </ion-row>\\n                <form (ngSubmit)=\\\"recovery(frecovery)\\\" #frecovery=\\\"ngForm\\\">\\n                    <ion-row>\\n                        <ion-col size=\\\"12\\\">\\n                            <h4>Recuperar Contrase√±a</h4>\\n                        </ion-col>\\n                        <ion-col>\\n                            <ion-list>\\n                                <ion-item>\\n                                    <ion-label position=\\\"floating\\\">Correo Electronico</ion-label>\\n                                    <ion-input name=\\\"email\\\" [(ngModel)]=\\\"recoveryUser.email\\\" type=\\\"email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required></ion-input>\\n                                </ion-item>\\n                            </ion-list>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-button type=\\\"submit\\\" color=\\\"tertiary\\\" shape=\\\"round\\\">\\n                                Recuperar\\n                            </ion-button>\\n                        </ion-col>\\n                    </ion-row>\\n                </form>\\n            </ion-grid>\\n        </ion-slide>\\n    </ion-slides>\\n</ion-content>\\n<ion-footer no-border>\\n    <ion-toolbar>\\n        <ion-row>\\n            <ion-col>\\n                <ion-button shape=\\\"round\\\" expand=\\\"full\\\" size=\\\"small\\\" fill=\\\"outline\\\" color=\\\"tertiary\\\" (click)=\\\"mostrarLogin()\\\">\\n                    Ingresar\\n                </ion-button>\\n            </ion-col>\\n            <ion-col>\\n                <ion-button shape=\\\"round\\\" expand=\\\"full\\\" size=\\\"small\\\" fill=\\\"outline\\\" color=\\\"tertiary\\\" (click)=\\\"mostrarRegistro()\\\">\\n                    Registrarme\\n                </ion-button>\\n            </ion-col>\\n            <ion-col>\\n                <ion-button shape=\\\"round\\\" expand=\\\"full\\\" size=\\\"small\\\" fill=\\\"outline\\\" color=\\\"tertiary\\\" (click)=\\\"mostrarRecovery()\\\">\\n                    Recuperar Contrase√±a\\n                </ion-button>\\n            </ion-col>\\n        </ion-row>\\n    </ion-toolbar>\\n</ion-footer>\";","export class UsuarioModel{\n    email: string;\n    displayName: string;\n    password: string;\n    photoUrl: string;\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".mainSlide,\\n.mainSlide ion-slide {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\nimg {\\n  width: 150px;\\n}\\n\\n.pick-avatar {\\n  width: 80px;\\n  opacity: 0.3;\\n}\\n\\n.pick-avatar-seleccionado {\\n  transition: opacity 0.5s linear;\\n  opacity: 1 !important;\\n}\\n\\n.my-custom-class {\\n  color: red !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVJLFdBQVc7RUFDWCxZQUFZO0FBQ2hCOztBQUVBO0VBQ0ksWUFBWTtBQUNoQjs7QUFFQTtFQUNJLFdBQVc7RUFDWCxZQUFZO0FBQ2hCOztBQUVBO0VBQ0ksK0JBQStCO0VBQy9CLHFCQUFxQjtBQUN6Qjs7QUFFQTtFQUNJLHFCQUFxQjtBQUN6QiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluU2xpZGUsXG4ubWFpblNsaWRlIGlvbi1zbGlkZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG5pbWcge1xuICAgIHdpZHRoOiAxNTBweDtcbn1cblxuLnBpY2stYXZhdGFyIHtcbiAgICB3aWR0aDogODBweDtcbiAgICBvcGFjaXR5OiAwLjM7XG59XG5cbi5waWNrLWF2YXRhci1zZWxlY2Npb25hZG8ge1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBsaW5lYXI7XG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xufVxuXG4ubXktY3VzdG9tLWNsYXNzIHtcbiAgICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7XG59Il19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IonSlides, LoadingController, ToastController } from '@ionic/angular';\nimport { UsuarioModel } from '../../model/usuarios.model';\nimport { AuthService } from '../../servicies/auth.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { InfoUser } from 'src/app/interfaces/infouser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  @ViewChild('slidePrincipal') slides: IonSlides;\n\n  usuario: UsuarioModel;\n  loading: HTMLIonLoadingElement;\n\n  infoUser: InfoUser = {\n    description: '',\n    username: '',\n    name: '',\n    photoUrl: 'av-1.png'\n  };\n\n  registerUser: UsuarioModel = {\n    email: '',\n    displayName: '',\n    photoUrl: '',\n    password: ''\n  };\n\n  recoveryUser: UsuarioModel = {\n    email: '',\n    displayName: '',\n    photoUrl: '',\n    password: ''\n  };\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    public loadingController: LoadingController,\n    public toastController: ToastController\n    ) { }\n\n  ngOnInit() {\n    this.usuario = new UsuarioModel();\n    this.initLoading();\n  }\n\n  ionViewDidEnter(){\n    this.slides.lockSwipes( true );\n  }\n\n  login(form: NgForm){\n    if (form.invalid) { return; }\n    this.logincSuccess();\n    setTimeout( () => {\n      this.auth.login(this.usuario)\n        .subscribe( (resp: any) => {\n          this.loading.dismiss();\n          this.toastSuccess(resp.email);\n          this.router.navigateByUrl('/tabs/inicio');\n        }, (err) => {\n          this.loading.dismiss();\n          this.toastError();\n          console.log(err);\n        });\n    }, 2000);\n  }\n  async logincSuccess() {\n    this.loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Espere un momento...',\n      // duration: 2000\n    });\n    await this.loading.present();\n  }\n  async initLoading() {\n    this.loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Bienvenido',\n      duration: 1000\n    });\n    await this.loading.present();\n  }\n  async toastSuccess(message: string) {\n    const toast = await this.toastController.create({\n      message: `Bienvenido ${message}`,\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n  async toastError() {\n    const toast = await this.toastController.create({\n      message: 'Correo y/o Contrase√±a Incorrecta.',\n      position: 'bottom',\n      duration: 2500\n    });\n    toast.present();\n  }\n  async toastErrorRegister() {\n    const toast = await this.toastController.create({\n      message: 'Correo electronico ya existente.',\n      position: 'bottom',\n      duration: 2500\n    });\n    toast.present();\n  }\n  async toastErrorMesage() {\n    const toast = await this.toastController.create({\n      message: 'Correo electronico no encontrado',\n      position: 'bottom',\n      duration: 2500\n    });\n    toast.present();\n  }\n  async toastSuccessRecovery(message: string) {\n    const toast = await this.toastController.create({\n      message: `Se ha enviado el enlace a ${message}`,\n      position: 'bottom',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  registro(form: NgForm){\n    if (form.invalid) { return; }\n    this.logincSuccess();\n    this.auth.postUser(this.infoUser).subscribe((resp: any) => {\n    const uuid = resp.name;\n    this.auth.nuevoUsuario(this.registerUser, uuid)\n      .subscribe( usuario => {\n      this.loading.dismiss();\n      this.toastSuccess(usuario.email);\n      this.router.navigateByUrl('/tabs/inicio');\n    }, (err) => {\n      this.loading.dismiss();\n      this.toastErrorRegister();\n      console.log(err);\n      });\n    });\n  }\n\n  recovery(form: NgForm){\n    this.logincSuccess();\n    this.auth.recovery(this.recoveryUser).subscribe( (resp: any) => {\n      this.loading.dismiss();\n      this.toastSuccessRecovery(resp.email);\n    }, (error) => {\n      this.loading.dismiss();\n      this.toastErrorMesage();\n    });\n  }\n\n  mostrarRegistro(){\n    this.slides.lockSwipes(false);\n    this.slides.slideTo(1);\n    this.slides.lockSwipes(true);\n  }\n\n  mostrarLogin(){\n    this.slides.lockSwipes(false);\n    this.slides.slideTo(0);\n    this.slides.lockSwipes(true);\n  }\n\n  mostrarRecovery(){\n    this.slides.lockSwipes(false);\n    this.slides.slideTo(2);\n    this.slides.lockSwipes(true);\n  }\n\n}\n"]}